# Copyright 2018- The Pixie Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

load("@io_bazel_rules_go//go:def.bzl", "go_library")
load("//bazel:pl_build_system.bzl", "pl_go_test")

go_library(
    name = "script_runner",
    srcs = [
        "cloud_source.go",
        "config_map_source.go",
        "script_runner.go",
        "source.go",
        "sources.go",
    ],
    importpath = "px.dev/pixie/src/vizier/services/query_broker/script_runner",
    visibility = ["//visibility:public"],
    deps = [
        "//src/api/proto/vizierpb:vizier_pl_go_proto",
        "//src/carnot/planner/compilerpb:compiler_status_pl_go_proto",
        "//src/common/base/statuspb:status_pl_go_proto",
        "//src/shared/cvmsgs",
        "//src/shared/cvmsgspb:cvmsgs_pl_go_proto",
        "//src/shared/scripts",
        "//src/shared/services/utils",
        "//src/utils",
        "//src/utils/shared/k8s",
        "//src/vizier/services/metadata/metadatapb:service_pl_go_proto",
        "//src/vizier/utils/messagebus",
        "@com_github_gofrs_uuid//:uuid",
        "@com_github_gogo_protobuf//proto",
        "@com_github_gogo_protobuf//types",
        "@com_github_nats_io_nats_go//:nats_go",
        "@com_github_sirupsen_logrus//:logrus",
        "@in_gopkg_yaml_v2//:yaml_v2",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/labels",
        "@io_k8s_client_go//informers",
        "@io_k8s_client_go//informers/core/v1:core",
        "@io_k8s_client_go//kubernetes",
        "@io_k8s_client_go//listers/core/v1:core",
        "@io_k8s_client_go//rest",
        "@io_k8s_client_go//tools/cache",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//metadata",
        "@org_golang_google_grpc//status",
    ],
)

pl_go_test(
    name = "script_runner_test",
    srcs = [
        "cloud_source_test.go",
        "config_map_source_test.go",
        "helper_test.go",
        "script_runner_test.go",
    ],
    embed = [":script_runner"],
    deps = [
        "//src/api/proto/vizierpb:vizier_pl_go_proto",
        "//src/api/proto/vizierpb/mock",
        "//src/carnot/planner/compilerpb:compiler_status_pl_go_proto",
        "//src/common/base/statuspb:status_pl_go_proto",
        "//src/shared/cvmsgspb:cvmsgs_pl_go_proto",
        "//src/shared/scripts",
        "//src/utils",
        "//src/utils/testingutils",
        "//src/vizier/services/metadata/metadatapb:service_pl_go_proto",
        "@com_github_gofrs_uuid//:uuid",
        "@com_github_gogo_protobuf//proto",
        "@com_github_gogo_protobuf//types",
        "@com_github_golang_mock//gomock",
        "@com_github_nats_io_nats_go//:nats_go",
        "@com_github_stretchr_testify//require",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_client_go//kubernetes/fake",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
    ],
)
