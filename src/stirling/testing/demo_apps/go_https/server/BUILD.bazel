# Copyright 2018- The Pixie Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

load("@io_bazel_rules_docker//container:container.bzl", "container_image")
load("@io_bazel_rules_go//go:def.bzl", "go_cross_binary", "go_library")
load("//bazel:pl_build_system.bzl", "pl_all_supported_go_sdk_versions", "pl_go_binary", "pl_go_sdk_version_template_to_label")

package(default_visibility = ["//src/stirling:__subpackages__"])

go_library(
    name = "server_lib",
    srcs = ["https_server.go"],
    importpath = "px.dev/pixie/src/stirling/testing/demo_apps/go_https/server",
    deps = [
        "@com_github_spf13_pflag//:pflag",
        "@com_github_spf13_viper//:viper",
        "@org_golang_x_net//http2",
    ],
)

genrule(
    name = "certs",
    outs = [
        "server.crt",
        "server.key",
    ],
    cmd = """
        openssl ecparam -genkey -name secp384r1 -out $(location server.key) && \
        openssl req -new -x509 -sha256 -key $(location server.key) -subj "/C=US/ST=California/L=San Francisco/O=Pixie Labs Inc./CN=127.0.0.1:50101" -out $(location server.crt) -days 365
    """,
)

filegroup(
    name = "server_certs",
    srcs = [
        "server.crt",
        "server.key",
    ],
)

pl_go_binary(
    name = "server",
    embed = [":server_lib"],
)

[
    go_cross_binary(
        name = pl_go_sdk_version_template_to_label("golang_%s_server_binary", sdk_version),
        sdk_version = sdk_version,
        tags = ["manual"],
        target = ":server",
    )
    for sdk_version in pl_all_supported_go_sdk_versions
]

[
    container_image(
        name = pl_go_sdk_version_template_to_label("golang_%s_https_server", sdk_version),
        base = "//:pl_go_base_image",
        entrypoint = [
            pl_go_sdk_version_template_to_label("./golang_%s_server_binary", sdk_version),
            "--cert=server.crt",
            "--key=server.key",
        ],
        files = [
            pl_go_sdk_version_template_to_label(":golang_%s_server_binary", sdk_version),
            ":server_certs",
        ],
    )
    for sdk_version in pl_all_supported_go_sdk_versions
]
