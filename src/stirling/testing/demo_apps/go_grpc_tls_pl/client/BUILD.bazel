# Copyright 2018- The Pixie Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_layer")
load("@io_bazel_rules_go//go:def.bzl", "go_cross_binary", "go_library")
load("//bazel:pl_build_system.bzl", "pl_go_binary", "pl_supported_go_sdk_versions")

package(default_visibility = ["//src/stirling:__subpackages__"])

container_layer(
    name = "certs_layer",
    directory = "/certs",
    files = ["//src/stirling/testing/demo_apps/go_grpc_tls_pl/certs:client_certs"],
)

go_library(
    name = "client_lib",
    srcs = ["client.go"],
    importpath = "px.dev/pixie/src/stirling/testing/demo_apps/go_grpc_tls_pl/client",
    deps = [
        "//src/stirling/testing/demo_apps/go_grpc_tls_pl/server/greetpb:service_pl_go_proto",
        "@com_github_sirupsen_logrus//:logrus",
        "@com_github_spf13_pflag//:pflag",
        "@com_github_spf13_viper//:viper",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//credentials",
    ],
)

pl_go_binary(
    name = "client",
    embed = [":client_lib"],
)

[
    go_cross_binary(
        name = "golang_%s_grpc_tls_client_binary" % sdk_version.replace(".", "_"),
        sdk_version = sdk_version,
        tags = ["manual"],
        target = ":client",
    )
    for sdk_version in pl_supported_go_sdk_versions
]

[
    container_image(
        name = "golang_%s_grpc_tls_client" % sdk_version.replace(".", "_"),
        base = "//:pl_go_base_image",
        entrypoint = [
            "./golang_%s_grpc_tls_client_binary" % sdk_version.replace(".", "_"),
            "--client_tls_cert=/certs/client.crt",
            "--client_tls_key=/certs/client.key",
            "--tls_ca_cert=/certs/ca.crt",
            "--count=1",
        ],
        files = [
            ":golang_%s_grpc_tls_client_binary" % sdk_version.replace(".", "_"),
        ],
        layers = [":certs_layer"],
    )
    for sdk_version in pl_supported_go_sdk_versions
]
