---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vzconn-server
spec:
  selector:
    matchLabels:
      name: vzconn-server
  template:
    metadata:
      labels:
        name: vzconn-server
        monitoring.gke.io/scrape: 'true'
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '51601'
        prometheus.io/scheme: 'http'
    spec:
      containers:
      - name: vzconn-server
        imagePullPolicy: IfNotPresent
        image: cloud-vzconn_server_image
        ports:
        - containerPort: 51600
          name: http2
        - containerPort: 51601
          name: metrics-http
        readinessProbe:
          httpGet:
            scheme: HTTPS
            path: /healthz
            port: 51600
        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /healthz
            port: 51600
        envFrom:
        - configMapRef:
            name: pl-db-config
        - configMapRef:
            name: pl-tls-config
        - configMapRef:
            name: pl-domain-config
        - configMapRef:
            name: pl-jetstream-config
        - configMapRef:
            name: pl-errors-config
            optional: true
        env:
        - name: PL_SERVER_TLS_CERT
          value: /proxycerts/tls.crt
        - name: PL_SERVER_TLS_KEY
          value: /proxycerts/tls.key
        - name: PL_JWT_SIGNING_KEY
          valueFrom:
            secretKeyRef:
              name: cloud-auth-secrets
              key: jwt-signing-key
        - name: PL_VZMGR_SERVICE
          valueFrom:
            configMapKeyRef:
              name: pl-service-config
              key: PL_VZMGR_SERVICE
        - name: PL_POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: pl-db-secrets
              key: PL_POSTGRES_USERNAME
        - name: PL_POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pl-db-secrets
              key: PL_POSTGRES_PASSWORD
        volumeMounts:
        - name: certs
          mountPath: /certs
        - name: proxycerts
          mountPath: /proxycerts
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 10100
          seccompProfile:
            type: RuntimeDefault
      securityContext:
        runAsNonRoot: true
        runAsUser: 10100
        seccompProfile:
          type: RuntimeDefault
      volumes:
      - name: certs
        secret:
          secretName: service-tls-certs
      - name: proxycerts
        secret:
          secretName: cloud-proxy-tls-certs
