---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-scripts
data:
  init-ory-dbs.sh: |
    #!/usr/bin/env bash
    set -e

    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
        CREATE DATABASE $PL_HYDRA_DATABASE;
        CREATE DATABASE $PL_KRATOS_DATABASE;
        GRANT ALL PRIVILEGES ON DATABASE $PL_HYDRA_DATABASE TO $POSTGRES_USER;
        GRANT ALL PRIVILEGES ON DATABASE $PL_KRATOS_DATABASE TO $POSTGRES_USER;
    EOSQL
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  selector:
    matchLabels:
      name: postgres
  template:
    metadata:
      labels:
        name: postgres
    spec:
      containers:
      - name: postgres
        # TODO(ddelnano): This image was rebuilt from https://github.com/docker-library/postgres 14-alpine
        # to remediate a critical vulnerability. Switch back to upstream once fixed.
        # yamllint disable-line rule:line-length
        image: ghcr.io/pixie-io/postgres:14-alpine-pl1@sha256:237c5fcf79b230979e12fe02f46e0ad29565b4ecb7cb15047197cbb9a6549e8d
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: pl
        - name: POSTGRES_USER
          value: pl
        - name: POSTGRES_PASSWORD
          value: pl
        envFrom:
        - configMapRef:
            name: pl-ory-service-config
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          subPath: data
          name: postgres-pv-claim
        - mountPath: /docker-entrypoint-initdb.d
          name: postgres-init-scripts
      volumes:
      - name: postgres-pv-claim
        persistentVolumeClaim:
          claimName: postgres-pv-claim
      - name: postgres-init-scripts
        configMap:
          name: postgres-init-scripts
          defaultMode: 0755
